<%=
  # https://github.com/jneen/rouge/blob/f30adef49fcc99b0f80eed4c31eb084ef9da4031/lib/rouge.rb#L32-57
  # Rouge::Theme.registry
  theme = Rouge::Theme.find(
    # "thankful_eyes"
    # "colorful"
    # "base16"
    # "base16.dark"
    # "base16.solarized"
    # "base16.solarized.dark"
    # "base16.monokai"
    # "base16.monokai.light"
    # "github"
    # "monokai"
      "molokai"
    # "monokai.sublime"
  )

  # My initial plan: if there is no Generic.Output, use Generic.Traceback
  # but in the end, I didn't really like it for any of the themes.
  # Leaving it in, though, just so that we don't have to figure it out again,
  # if anyone wants to experiment
  #
  generic_output    = Rouge::Token.cache["Generic.Output"]
  generic_traceback = Rouge::Token.cache["Generic.Traceback"]
  # theme.styles[generic_output] ||= theme.styles[generic_traceback]


  # This is the output I chose for molokai, it probably doesn't fit well for other themes.
  # It's a medium gray with a tinge of bluish green that looks nice with our Turing colours, IMO
  theme.styles[generic_output][:fg] = "#577787"


  # render the styleet under the css class ".highlight"
  theme.render scope: '.highlight'
%>
.highlight {
  padding:     0.75em;
  line-height: 1.3em;
  /* Chose these b/c that's what Github uses, and their code looks very nice */
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;

  /* Got this list from: http://css-tricks.com/snippets/css/rounded-corners/ */
  <% radius = '0.4em' %>
  -moz-border-radius:    <%= radius %>;
  -webkit-border-radius: <%= radius %>;
  border-radius:         <%= radius %>; /* future proofing */
  -khtml-border-radius:  <%= radius %>; /* for old Konqueror browsers */

}
